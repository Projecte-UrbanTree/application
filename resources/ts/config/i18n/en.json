{
  "public": {
    "login": {
      "form": {
        "btnLogin": "Log in",
        "labelEmail": "Email",
        "labelPassword": "Password",
        "msgSuccess": "Logged in successfully",
        "placeholderEmail": "youremail@example.com",
        "rememberMe": "Remember me",
        "titleSuccess": "Success"
      }
    },
    "error": {
      "btnReturn": "Go back",
      "descriptions": {
        "404": "The page you are looking for does not exist.",
        "unexpected": "An unexpected error occurred. Please try again later."
      },
      "title": "Error {{errorCode}}"
    }
  },

  "general": {
    "allContracts": "All contracts",
    "genericError": "An error occurred. Please try again later.",
    "loading": "Loading...",
    "error": "Error",
    "success": "Success",
    "not_available": "Not available",
    "warning": "Warning",
    "cancel": "Cancel",
    "actions": {
      "cancel": "Cancel",
      "confirm": "Confirm",
      "close_part": "Close Part",
      "close_with_incidents": "Close with Incidents",
      "reject": "Reject",
      "close_with_observations": "Close with Observations",
      "edit_observation": "Edit Observation"
    },
    "messages": {
      "close_block": "Block closed successfully",
      "close_with_incidents": "Block closed with incidents",
      "reject": "Block rejected",
      "close_part": "Part closed successfully",
      "closing_part": "Closing part...",
      "part_closed": "Part successfully closed",
      "closing_block": "Closing block...",
      "rejecting": "Rejecting item...",
      "success": "Operation completed successfully",
      "error": "An error occurred. Please try again.",
      "reportCreated": "Work report created successfully",
      "reportResubmitted": "Work report resubmitted successfully",
      "reportRejected": "Work report was rejected",
      "reportApproved": "Work report was approved",
      "closing_with_incidents": "Closing with incidents...",
      "close_with_observations": "Report closed with observations",
      "already_processed": "This item has already been processed"
    }
  },

  "common": {
    "totalRecords": "Total Records",
    "tryAgain": "Try Again"
  },

  "admin": {
    "menu": {
      "management": "Management",
      "inventory": "Inventory",
      "settings": "Settings"
    },
    "submenu": {
      "manage": {
        "dashboard": "Dashboard",
        "inventory": "Inventory",
        "resources": "Resources",
        "stats": "Statistics",
        "workers": "Workers",
        "eva": "EVA",
        "workOrders": "Work Orders",
        "sensors": "Sensors"
      },
      "settings": {
        "contracts": "Contracts",
        "elementTypes": "Element Type",
        "resourceTypes": "Resource Types",
        "species": "Species",
        "taskTypes": "Task Types",
        "users": "Users"
      }
    },

    "profileDropdown": {
      "accountSettings": "Account settings",
      "license": "License",
      "logout": "Log out"
    },

    "roles": {
      "admin": "Admin",
      "customer": "Customer",
      "unknown": "Unknown",
      "worker": "Worker"
    },

    "status": {
      "active": "Active",
      "completed": "Completed",
      "inactive": "Inactive"
    },

    "tooltips": {
      "selectContract": "First, select a contract"
    },

    "buttons": {
      "createNew": "Create new"
    },

    "fields": {
      "company": "Company",
      "description": "Description",
      "dni": "ID card",
      "email": "Email",
      "end_date": "End Date",
      "family": "Family",
      "final_price": "Final Price",
      "genus": "Genus",
      "name": "Name",
      "password": "Password",
      "currentPassword": "Password (Current)",
      "newPassword": "New Password",
      "confirmPassword": "Confirm Password",
      "resource_type": "Resource Type",
      "role": "Role",
      "select_resource_type": "Select a resource type",
      "unit_cost": "Edit the unit cost",
      "unit_name": "Select a resource unit",
      "species": "Species",
      "start_date": "Start Date",
      "status": "Status",
      "surname": "Surname"
    },

    "pages": {
      "account": {
        "title": "Account Settings",
        "actions": {
          "save": "Save Changes",
          "saving": "Saving...",
          "revoke": "Revoke"
        },
        "validation": {
          "name_required": "Name is required",
          "name_invalid": "Invalid name",
          "surname_required": "Surname is required",
          "surname_invalid": "Invalid surname",
          "currentPasswordRequired": "Current password is required",
          "newPasswordMinLength": "New password must be at least 6 characters",
          "newPasswordMismatch": "Passwords do not match",
          "newPasswordComplexity": "New password must contain at least one uppercase letter, one lowercase letter, and one number"
        },
        "messages": {
          "profileUpdated": "Profile updated successfully",
          "errorSaving": "Error saving changes",
          "passwordCurrentWrong": "Current password is incorrect",
          "tokenRevoked": "Token revoked successfully",
          "errorRevokingToken": "Error revoking token"
        },
        "passwordChangeInfo": "Fill in the password fields only if you want to change it. Otherwise, leave them empty.",
        "tabs": {
          "profile": "Profile",
          "security": "Security",
          "basicInfo": "Basic Information"
        },
        "security": {
          "title": "Security",
          "tokens": "Security Tokens"
        },
        "securityTable": {
          "name": "Name",
          "lastUsed": "Last Used",
          "actions": "Actions"
        }
      },
      "license": {
        "title": "Software License",
        "description": "This software is licensed under the European Union Public License (EUPL). You are free to use, modify and distribute it, provided that the same license applies to any derivative work.",
        "moreInfo": "You can find more information about the license at",
        "link_text": "this link",
        "link_url": "https://interoperable-europe.ec.europa.eu/collection/eupl",
        "below_text": "or see the complete text below:",
        "fullText": {
          "title": "EUROPEAN UNION PUBLIC LICENSE v. 1.2",
          "copyright": "EUPL © European Union 2007, 2016",
          "preface": "This European Union Public License (EUPL) applies to the work (as defined below) provided under the terms of this license. Any use of the work, other than as authorized under this license is prohibited (to the extent such use is covered by a right of the copyright holder of the work).\n\nThe work is provided under the terms of this license when the licensor (as defined below) has placed the following notice immediately following the copyright notice for the work:\n\n                Licensed under the EUPL\n\nor has expressed by any other means his willingness to license under the EUPL.",
          "sections": {
            "definitions": {
              "title": "1. Definitions",
              "content": "In this License, the following terms have the following meaning:\n\n— 'License': this license\n— 'Original work': the work or software distributed or communicated by the Licensor under this license in source code form or as Executable Code\n— 'Derivative works': the works or software that could be created by the Licensee, based upon the Original Work or modifications thereof. This License does not define the extent of modification or dependence on the Original Work required to classify a work as a Derivative Work; this extent is determined by copyright law applicable under Article 15\n— 'The Work': the Original Work and/or its Derivative works\n— 'The Source Code': the human-readable form of the Work which is most convenient for people to study and modify\n— 'The Executable Code': any code which has generally been compiled and which is meant to be interpreted by a computer as a program\n— 'The Licensor': the natural or legal person that distributes or communicates the Work under the License\n— 'Contributor(s)': any natural or legal person who modifies the Work under the License, or otherwise contributes to the creation of a Derivative Work\n— 'The Licensee' or 'You': any natural or legal person who makes any usage of the Work under the terms of the License\n— 'Distribution' or 'Communication': any act of selling, giving, lending, renting, distributing, communicating, transmitting, or otherwise making available, online or offline, copies of the Work or providing access to its essential functionalities at the disposal of any other natural or legal person"
            },
            "scope": {
              "title": "2. Scope of the rights granted by the License",
              "content": "The Licensor hereby grants You a worldwide, royalty-free, non-exclusive, sublicensable license to do the following for the duration of copyright vested in the Original Work:\n\n— use the Work in any circumstance and for all usage\n— reproduce the Work\n— modify the Work and make Derivative Works based upon the Work\n— communicate to the public, including the right to make available or display the Work or copies thereof to the public and perform publicly, as the case may be, the Work\n— distribute the Work or copies thereof\n— lend and rent the Work or copies thereof\n— sublicense rights in the Work or copies thereof\n\nThose rights can be exercised on any media, supports and formats, whether now known or later invented, as far as the applicable law permits so.\n\nIn the countries where moral rights apply, the Licensor waives his right to exercise his moral right to the extent allowed by law in order to make effective the license of the economic rights here above listed.\n\nThe Licensor grants to the Licensee royalty-free, non-exclusive usage rights to any patents held by the Licensor, to the extent necessary to make use of the rights granted on the Work under this License."
            },
            "source_code": {
              "title": "3. Communication of the Source Code",
              "content": "The Licensor may provide the Work either in its Source Code form, or as Executable Code. If the Work is provided as Executable Code, the Licensor provides in addition a machine-readable copy of the Source Code of the Work along with each copy of the Work that the Licensor distributes or indicates, in a notice following the copyright notice attached to the Work, a repository where the Source Code is easily and freely accessible for as long as the Licensor continues to distribute or communicate the Work."
            },
            "copyright": {
              "title": "4. Limitations on copyright",
              "content": "Nothing in this License is intended to deprive the Licensee of the benefits from any exception or limitation to the exclusive rights of the rights owners in the Work, of the exhaustion of those rights or of other applicable limitations thereto."
            },
            "obligations": {
              "title": "5. Obligations of the Licensee",
              "content": "The grant of the rights mentioned above is subject to some restrictions and obligations imposed on the Licensee. Those obligations are the following:\n\nAttribution right: The Licensee shall keep intact all copyright, patent or trademarks notices and all notices that refer to the License and to the disclaimer of warranties. The Licensee must include a copy of such notices and a copy of the License with every copy of the Work he/she distributes or communicates. The Licensee must cause any Derivative Work to carry prominent notices stating that the Work has been modified and the date of modification.\n\nCopyleft clause: If the Licensee distributes or communicates copies of the Original Works or Derivative Works, this Distribution or Communication will be done under the terms of this License or of a later version of this License unless the Original Work is expressly distributed only under this version of the License — for example by communicating 'EUPL v. 1.2 only'. The Licensee (becoming Licensor) cannot offer or impose any additional terms or conditions on the Work or Derivative Work that alter or restrict the terms of the License.\n\nCompatibility clause: If the Licensee Distributes or Communicates Derivative Works or copies thereof based upon both the Work and another work licensed under a Compatible License, this Distribution or Communication can be done under the terms of this Compatible License. For the sake of this clause, 'Compatible License' refers to the licenses listed in the appendix attached to this License. Should the Licensee's obligations under the Compatible License conflict with his/her obligations under this License, the obligations of the Compatible License shall prevail.\n\nProvision of Source Code: When distributing or communicating copies of the Work, the Licensee will provide a machine-readable copy of the Source Code or indicate a repository where this Source Code easily and freely available for as long as the Licensee continues to distribute or communicate the Work.\n\nLegal Protection: This License does not grant permission to use the trade names, trademarks, service marks, or names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the copyright notice."
            },
            "authorship": {
              "title": "6. Chain of Authorship",
              "content": "The original licensor warrants that he/she owns the copyright in the original work granting the rights under this License or that he/she has been granted permission to do so.\n\nEach contributor warrants that he/she owns the copyright in his/her modifications to the Work or has obtained permission to submit those modifications under this License.\n\nEach time you accept the License, the original licensor and subsequent contributors grant you a license to their contributions to the Work, under the terms of this License."
            },
            "warranty": {
              "title": "7. Disclaimer of Warranty",
              "content": "The Work is a work in progress, which is continuously improved by numerous contributors. It is not a finished work and may therefore contain defects or 'bugs' inherent to this type of software development.\n\nFor the above reason, the Work is provided under the License on an 'as is' basis and without warranties of any kind concerning the Work, including without limitation, merchantability, fitness for a particular purpose, absence of defects or errors, accuracy, non-infringement of intellectual property rights other than copyright as stated in Article 6 of this License.\n\nThis disclaimer of warranty is an essential part of the License and a condition for the grant of any rights to the Work."
            },
            "liability": {
              "title": "8. Disclaimer of Liability",
              "content": "Except in the cases of wilful misconduct or damages directly caused to natural persons, the Licensor will in no event be liable for any direct or indirect, material or moral, damages of any kind, arising out of the License or of the use of the Work, including without limitation, damages for loss of goodwill, work stoppage, computer failure or malfunction, loss of data or any commercial damage, even if the Licensor has been advised of the possibility of such damage. However, the Licensor will be liable under statutory product liability laws as far such laws apply to the Work."
            },
            "additional": {
              "title": "9. Additional Agreements",
              "content": "While distributing the Work, you may choose to conclude an additional agreement, defining obligations or services consistent with this License. However, if accepting obligations, you may act only on your own behalf and on your sole responsibility, not on behalf of the original Licensor or any other Contributor, and only if you agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against such Contributor by the fact you have accepted any warranty or additional liability."
            },
            "acceptance": {
              "title": "10. Acceptance of the License",
              "content": "The provisions of this License can be accepted by clicking on an icon 'I agree' placed under the bottom of a window displaying the text of this License or by affirming consent in any other similar way, in accordance with the rules of applicable law. Clicking on that icon indicates your clear and irrevocable acceptance of this License and all of its terms and conditions.\n\nSimilarly, you irrevocably accept this License and all of its terms and conditions by exercising any rights granted to You by Article 2 of this License, such as the use of the Work, the creation by You of a Derivative Work or the Distribution or Communication by You of the Work or copies thereof."
            },
            "information": {
              "title": "11. Information to the Public",
              "content": "In case of any Distribution or Communication of the Work by means of electronic communication by You (for example, by offering to download the Work from a remote location) the distribution channel or media (for example, a website) must at least provide to the public the information requested by the applicable law regarding the Licensor, the License and the way it may be accessible, concluded, stored and reproduced by the Licensee."
            },
            "termination": {
              "title": "12. Termination of the License",
              "content": "The License and the rights granted hereunder will terminate automatically upon any breach by the Licensee of the terms of the License.\n\nSuch a termination will not terminate the licenses of any person who has received the Work from the Licensee under the License, provided such persons remain in full compliance with the License."
            },
            "miscellaneous": {
              "title": "13. Miscellaneous",
              "content": "Without prejudice to Article 9 above, the License represents the complete agreement between the Parties as to the Work.\n\nIf any provision of the License is invalid or unenforceable under applicable law, this will not affect the validity or enforceability of the License as a whole. Such provision will be construed or reformed so as necessary to make it valid and enforceable.\n\nThe European Commission may publish other linguistic versions or new versions of this License or updated versions of the Appendix, so far this is required and reasonable, without reducing the scope of the rights granted by the License. New versions of the License will be published with a unique version number.\n\nAll linguistic versions of this License, approved by the European Commission, have identical value. Parties can take advantage of the linguistic version of their choice."
            },
            "jurisdiction": {
              "title": "14. Jurisdiction",
              "content": "Without prejudice to specific agreement between parties,\n\n— any litigation resulting from the interpretation of this License, arising between the European Union institutions, bodies, offices or agencies, as a Licensor, and any Licensee, will be subject to the jurisdiction of the Court of Justice of the European Union, as laid down in article 272 of the Treaty on the Functioning of the European Union,\n\n— any litigation arising between other parties and resulting from the interpretation of this License, will be subject to the exclusive jurisdiction of the competent court where the Licensor resides or conducts its primary business."
            },
            "applicable_law": {
              "title": "15. Applicable Law",
              "content": "Without prejudice to specific agreement between parties,\n\n— this License shall be governed by the law of the European Union Member State where the Licensor has his seat, resides or has his registered office,\n\n— this License shall be governed by Belgian law if the Licensor has no seat, residence or registered office inside a European Union Member State."
            }
          },
          "appendix": {
            "title": "Appendix",
            "content": "Compatible Licenses according to Article 5 EUPL are:",
            "licenses": "— GNU General Public License (GPL) v. 2, v. 3\n— GNU Affero General Public License (AGPL) v. 3\n— Open Software License (OSL) v. 2.1, v. 3.0\n— Eclipse Public License (EPL) v. 1.0\n— CeCILL v. 2.0, v. 2.1\n— Mozilla Public License (MPL) v. 2\n— GNU Lesser General Public License (LGPL) v. 2.1, v. 3\n— Creative Commons Attribution-ShareAlike v. 3.0 Unported (CC BY-SA 3.0) for works other than software\n— European Union Public License (EUPL) v. 1.1, v. 1.2\n— Québec Free and Open-Source License — Reciprocity (LiLiQ-R) or Strong Reciprocity (LiLiQ-R+)\n\nThe European Commission may update this Appendix to later versions of the above licenses without producing a new version of the EUPL, as long as they provide the rights granted in Article 2 of this License and protect the covered Source Code from exclusive appropriation.\n\nAll other changes or additions to this Appendix require the production of a new EUPL version."
          }
        }
      },

      "contracts": {
        "title": "Contracts",
        "form": {
          "placeholders": {
            "status": "Select a status"
          },
          "returnButton": "Return to contract list",
          "submitButton": {
            "create": "Create Contract",
            "edit": "Save Changes"
          },
          "submittingText": {
            "create": "Creating...",
            "edit": "Saving..."
          },
          "title": {
            "create": "Create Contract",
            "edit": "Edit Contract"
          },
          "validation": {
            "end_date_after_start_date": "End date must be after start date",
            "end_date_required": "End date is required",
            "final_price_required": "Final price is required",
            "name_invalid": "Name is invalid",
            "name_required": "Name is required",
            "start_date_required": "Start date is required",
            "status_invalid": "Invalid status",
            "status_required": "Status is required"
          },
          "name": "Contract name",
          "startDate": "Start Date",
          "endDate": "End Date"
        },
        "list": {
          "actions": {
            "delete": "Delete contract",
            "edit": "Edit contract",
            "label": "Actions",
            "duplicate": "Duplicate contract",
            "create": "Create Contract"
          },
          "columns": {
            "end_date": "End Date",
            "final_price": "Final Price",
            "name": "Contract",
            "start_date": "Start Date",
            "status": "Status"
          },
          "messages": {
            "createSuccess": "Contract created successfully",
            "deleteConfirm": "Are you sure you want to delete this contract?",
            "deleteSuccess": "Contract deleted successfully",
            "error": "Error saving contract",
            "updateSuccess": "Contract updated successfully"
          }
        },
        "duplicate": {
          "title": "Duplicate Contract",
          "submit": "Duplicate Contract",
          "success": "Contract duplicated successfully",
          "submitting": "Duplicating..."
        }
      },

      "dashboard": {
        "title": "Dashboard",
        "welcome": {
          "greeting": "Welcome back, {{name}} {{surname}}.",
          "message": "We are glad to see you again. Here is a quick overview of your data."
        },
        "quickActions": "Quick Actions",
        "createWorkOrder": "Create Work Order",
        "reviewReports": "Review Reports",
        "manageUsers": "Manage Users",
        "recentActivity": "Recent Activity",
        "workOrderCompleted": "Work Order Completed",
        "ago": "ago",
        "reportSubmitted": "Report Submitted",
        "workOrderAssigned": "Work Order Assigned",
        "totalWorkOrders": "Total Orders",
        "inProgressWorkOrders": "In Progress Work Orders",
        "noInProgressWorkOrders": "No in-progress work orders",
        "completedWorkOrders": "Completed",
        "pendingReports": "Pending Reports",
        "viewAll": "View All Activities",
        "noActivity": "No recent activity",
        "actions": "Actions",
        "stats": {
          "widgets": {
            "contracts": "Contracts",
            "elements": "Elements",
            "users": "Users",
            "workOrders": "Work Orders"
          }
        }
      },

      "elementTypes": {
        "title": "Element Types",
        "loading": "Loading...",
        "actions": "Actions",
        "editButton": "Edit element type",
        "deleteButton": "Delete element type",
        "deletedSuccess": "Element type deleted successfully",
        "deleteConfirm": "Are you sure you want to delete this element type?",
        "success": "Element type created successfully",
        "update": "Element type updated successfully",
        "error": "Error saving element type",
        "true": "Yes",
        "false": "No",
        "create": {
          "title": "Create Element Type",
          "submittingText": "Creating...",
          "submitButton": "Create Element Type",
          "validations": {
            "name": "Name is required",
            "requires_tree_type": "Requires tree type",
            "icon": "Icon is required",
            "color": "Color is required",
            "description": "Description is required"
          },
          "placeholders": {
            "name": "Element type name",
            "requires_tree_type": "Select if it requires tree type",
            "description": "Element type description",
            "icon": "Select an icon",
            "color": "Select a color"
          }
        },
        "edit": {
          "title": "Edit Element Type",
          "submittingText": "Saving...",
          "submitButton": "Save Changes",
          "validations": {
            "name": "Name is required",
            "requires_tree_type": "Requires tree type",
            "icon": "Icon is required",
            "color": "Color is required",
            "description": "Description is required"
          },
          "placeholders": {
            "name": "Element type name",
            "requires_tree_type": "Select if it requires tree type",
            "description": "Element type description",
            "icon": "Select an icon",
            "color": "Select a color"
          }
        },
        "columns": {
          "name": "Name",
          "requires_tree_type": "Requires tree type",
          "description": "Description",
          "icon": "Icon",
          "color": "Color"
        },
        "icons": {
          "tree": "Tree",
          "home": "Home",
          "post-lamp": "Post Lamp",
          "park": "Park",
          "fountain": "Fountain",
          "flower": "Flower",
          "mountain": "Mountain",
          "beach": "Beach",
          "volcano": "Volcano",
          "tap": "Tap",
          "water-drop": "Water Drop",
          "lightbulb": "Lightbulb",
          "lightning-bolt": "Lightning Bolt",
          "grass": "Grass",
          "cloud": "Cloud"
        },
        "list": {
          "actions": {
            "delete": "Delete element type",
            "edit": "Edit element type",
            "label": "Actions",
            "create": "Create Element Type"
          }
        }
      },

      "evas": {
        "title": "Evas",
        "age": {
          "years": "Years",
          "months": "Months"
        },
        "columns": {
          "element_id": "Element ID",
          "age": "Age",
          "height": "Height",
          "actions": "Actions",
          "name": "Name",
          "coordinates": "Coordinates",
          "status": "Status"
        },
        "form": {
          "name": "Name",
          "element_id": "Element ID",
          "years": "Years",
          "months": "Months",
          "height": "Height",
          "diameter": "Diameter",
          "crown_width": "Crown Width",
          "crown_projection_area": "Crown Projection Area",
          "root_surface_diameter": "Root Surface Diameter",
          "effective_root_area": "Effective Root Area",
          "height_estimation": "Height Estimation",
          "unbalanced_crown": "Unbalanced Crown",
          "overextended_branches": "Overextended Branches",
          "cracks": "Cracks",
          "dead_branches": "Dead Branches",
          "inclination": "Inclination",
          "V_forks": "V Forks",
          "cavities": "Cavities",
          "bark_damage": "Bark Damage",
          "soil_lifting": "Soil Lifting",
          "cut_damaged_roots": "Cut/Damaged Roots",
          "basal_rot": "Basal Rot",
          "exposed_surface_roots": "Exposed Surface Roots",
          "wind": "Wind",
          "drought": "Drought",
          "validation": {
            "element_required": "Element is required"
          },
          "title": {
            "create": "Create Eva",
            "edit": "Edit Eva"
          },
          "saving": "Saving...",
          "save": "Save",
          "age": "Age",
          "yearsShort": "Years",
          "monthsShort": "Months",
          "dateBirth": "Date of Birth"
        },
        "list": {
          "actions": {
            "show": "Show Eva",
            "delete": "Delete Eva",
            "create": "Create EVA"
          },
          "messages": {
            "createSuccess": "Eva created successfully",
            "deleteConfirm": "Are you sure you want to delete this Eva?",
            "deleteSuccess": "Eva deleted successfully",
            "deleteSuccessDetail": "EVA details were deleted successfully",
            "error": "Error saving Eva",
            "updateSuccess": "Eva updated successfully"
          }
        },
        "status": {
          "low": "Low",
          "moderate": "Moderate",
          "high": "High",
          "critical": "Critical",
          "pending": "Pending"
        },
        "stability": {
          "stable": "Stable",
          "moderate": "Moderate",
          "highRisk": "High Risk",
          "pending": "Pending"
        },
        "gravityHeight": {
          "veryStable": "Very Stable",
          "moderateRisk": "Moderate Risk",
          "highRisk": "High Risk",
          "pending": "Pending"
        },
        "rootCrown": {
          "veryStable": "Very Stable",
          "stable": "Stable",
          "moderateStability": "Moderate Stability",
          "highRisk": "High Risk",
          "pending": "Pending"
        },
        "windStability": {
          "veryStable": "Very Stable",
          "moderateStability": "Moderate Stability",
          "highRisk": "High Risk",
          "pending": "Pending"
        },
        "severity": {
          "low": "Low",
          "moderate": "Moderate",
          "high": "High",
          "extreme": "Extreme",
          "pending": "Pending"
        },
        "show": {
          "title": "Eva Details",
          "generalInfo": "General Information",
          "indexCalculation": "Index Calculation",
          "environmentalFactors": "Environmental Factors",
          "treeStructure": "Tree Structure",
          "treeCondition": "Tree Condition",
          "element": "Element",
          "statusFactorInfo": "The tree status factor indicates the overall health of the tree.",
          "formulas": {
            "stabilityIndex": "Height / Diameter",
            "gravityHeightRatio": "Estimated Height / Height",
            "rootCrownRatio": "Effective Root Area / Crown Projection Area",
            "windStabilityIndex": "(Height * Crown Width) / Effective Root Area"
          }
        },
        "dictionaries": {
          "unbalancedCrown": {
            "0": "No inclination or uneven growth",
            "1": "Slight crown inclination",
            "2": "Visibly inclined crown",
            "3": "Extremely inclined crown"
          },
          "overextendedBranches": {
            "0": "Well-structured branches",
            "1": "Few overextended branches",
            "2": "Several overextended branches",
            "3": "Overextended and heavy branches"
          },
          "cracks": {
            "0": "No cracks",
            "1": "Small cracks in the trunk",
            "2": "Visible cracks in several parts",
            "3": "Deep cracks in the trunk"
          },
          "deadBranches": {
            "0": "No dead branches",
            "1": "Some dead branches",
            "2": "Multiple dead branches",
            "3": "Large number of dead branches"
          },
          "inclination": {
            "0": "Completely vertical",
            "1": "Slight inclination (<5°)",
            "2": "Moderate inclination (5-15°)",
            "3": "High inclination (>15°)"
          },
          "VForks": {
            "0": "Normal bifurcations",
            "1": "Slight V bifurcation",
            "2": "Pronounced V bifurcation",
            "3": "Dangerous V bifurcation"
          },
          "cavities": {
            "0": "No cavities",
            "1": "Small cavity",
            "2": "Intermediate cavity",
            "3": "Deep and structural cavity"
          },
          "barkDamage": {
            "0": "Intact bark",
            "1": "Bark with slight wounds",
            "2": "Significant bark damage",
            "3": "Very damaged bark"
          },
          "soilLifting": {
            "0": "Soil without alterations",
            "1": "Slight soil elevation",
            "2": "Visible soil elevation",
            "3": "Severely lifted soil"
          },
          "cutRoots": {
            "0": "Intact roots",
            "1": "Roots with slight cuts",
            "2": "Partially damaged roots",
            "3": "Severely cut roots"
          },
          "basalRot": {
            "0": "No rot",
            "1": "Initial rot",
            "2": "Visible rot",
            "3": "Advanced rot"
          },
          "exposedRoots": {
            "0": "Roots underground",
            "1": "Some exposed roots",
            "2": "Several exposed roots",
            "3": "Exposed and weakened roots"
          },
          "wind": {
            "0": "Tree protected by natural barriers or buildings, no strong constant wind.",
            "1": "Tree with occasional wind but no significant impact on its stability.",
            "2": "Tree exposed to frequent strong winds, which may affect its structure.",
            "3": "Tree in open areas or slopes where the wind blows with extreme force."
          },
          "drought": {
            "0": "Tree in an area with stable humidity and constant access to water, no water stress.",
            "1": "Tree with moderate access to water, but with occasional drought periods.",
            "2": "Tree in an area with recurrent droughts, affecting its development and resistance.",
            "3": "Tree in an arid area or with prolonged droughts, high risk of weakening."
          }
        },
        "edit": {
          "title": "Edit Eva",
          "identification": "Identification",
          "treeCondition": "Tree Condition",
          "dimensions": "Dimensions",
          "state": "State",
          "crownBranches": "Crown and Branches",
          "trunk": "Trunk",
          "roots": "Roots",
          "environmentCondition": "Environment Condition",
          "environmentalFactors": "Environmental Factors",
          "windExposure": "Wind Exposure",
          "droughtExposure": "Drought Exposure"
        },
        "create": {
          "identification": "Identification",
          "treeCondition": "Tree Condition",
          "dimensions": "Dimensions",
          "state": "State",
          "crownBranches": "Crown and Branches",
          "trunk": "Trunk",
          "roots": "Roots",
          "environmentCondition": "Environment Condition",
          "environmentalFactors": "Environmental Factors",
          "windExposure": "Wind Exposure",
          "droughtExposure": "Drought Exposure"
        },
        "indexCalculation": "Index Calculation",
        "treeStatusFactor": "Tree Status Factor",
        "stabilityIndex": "Stability Index (H/D)",
        "gravityHeightRatio": "Gravity Height Ratio (CG/H)",
        "rootCrownRatio": "Root Crown Ratio (SR/SC)",
        "windStabilityIndex": "Wind Stability Index (WSI)",
        "environmentalFactors": "Environmental Factors",
        "windExposure": "Wind Exposure",
        "droughtExposure": "Drought Exposure"
      },
      "inventory": {
        "title": "Inventory",
        "elementDetailPopup": {
          "tabs": {
            "information": "Information",
            "incidences": "Incidences",
            "history": "History",
            "eva": "EVA"
          },
          "information": {
            "title": "Tree Information",
            "description": "Description",
            "elementType": "Element Type",
            "treeFamily": "Tree Family",
            "treeGenus": "Genus",
            "treeSpecies": "Species",
            "creationDate": "Creation Date",
            "location": {
              "title": "Location",
              "zone": "Zone",
              "latitude": "Latitude",
              "longitude": "Longitude"
            },
            "deleteElement": "Delete Element",
            "elementDeleted": "Element deleted successfully",
            "elementDeleteFailed": "Failed to delete the element",
            "editElement": "Edit Element"
          },
          "incidences": {
            "title": "Incidence",
            "name": "📛 Name",
            "creationDate": "📅 Creation Date",
            "status": "⚠️ Status",
            "description": "📝 Description",
            "addIncident": "Add Incident",
            "deleteIncident": "Delete Incident",
            "noIncidences": "No incidences registered for this element.",
            "statusUpdated": "Status updated",
            "statusUpdatedDetail": "The incidence status was updated successfully",
            "statusUpdateFailed": "Failed to update the incidence status",
            "statusOptions": {
              "open": "Open",
              "in_progress": "In Progress",
              "closed": "Closed"
            },
            "loadError": "Error loading incidences",
            "deleteSuccess": "Incidence deleted",
            "deleteSuccessDetail": "Incidence deleted successfully",
            "deleteError": "Error deleting incidence",
            "deleteErrorDetail": "Failed to delete the incidence"
          },
          "eva": {
            "loading": "Loading tree evaluation...",
            "noData": "No evaluation data available for this tree.",
            "evaluationIndices": "Evaluation Indices",
            "treeStatus": "Tree Status",
            "stabilityIndex": "Stability Index",
            "gravityHeightRatio": "Gravity-Height Ratio",
            "rootCrownRatio": "Root-Crown Ratio",
            "windStabilityIndex": "Wind Stability Index",
            "environmentalFactors": "Environmental Factors",
            "windExposure": "Wind Exposure",
            "droughtExposure": "Drought Exposure",
            "technicalData": "Technical Data",
            "height": "Height",
            "diameter": "Diameter",
            "crownWidth": "Crown Width",
            "crownProjectionArea": "Crown Projection Area",
            "effectiveRootArea": "Effective Root Area",
            "createEva": "Create EVA",
            "editEva": "Edit EVA",
            "deleteEva": "Delete EVA",
            "list": {
              "messages": {
                "deleteSuccess": "EVA deleted successfully",
                "deleteSuccessDetail": "EVA details were deleted successfully",
                "deleteError": "Error deleting EVA",
                "deleteErrorDetail": "Could not delete EVA details"
              }
            }
          },
          "history": {
            "title": "Element History",
            "notes": "Notes",
            "task": "Task",
            "description": "Description",
            "workOrder": "Work Order",
            "status": "Status",
            "noTasks": "No task history for this element.",
            "unknownTask": "Unknown Task",
            "taskStatus": {
              "pending": "Pending",
              "inProgress": "In Progress",
              "completed": "Completed",
              "unknown": "Unknown"
            },
            "dateLabel": "Date:",
            "workOrderLabel": "Work Order:",
            "hoursLabel": "Hours Spent:",
            "workersLabel": "Workers:",
            "taskHistoryTitle": "Task History"
          },
          "workOrders": {
            "loadError": "Error loading work orders"
          }
        },
        "editElementForm": {
          "toast": {
            "successDetail": "Element updated successfully",
            "errorDetail": "Failed to update element"
          },
          "editingInfo": "Editing element #{{id}}",
          "labels": {
            "description": "Description",
            "elementType": "Element Type",
            "treeType": "Tree Type"
          },
          "placeholders": {
            "description": "Enter description...",
            "elementType": "Select element type",
            "treeType": "Select tree type"
          },
          "buttons": {
            "save": "Save Changes"
          }
        },
        "elementPopup": {
          "title": "Element #{{id}}",
          "elementTypeUndefined": "Undefined",
          "treeFamilyLabel": "Family:",
          "treeGenusLabel": "Genus:",
          "treeSpeciesLabel": "Species:",
          "createdLabel": "Created:",
          "createdAtNotAvailable": "Not available",
          "incidentButton": "Incident",
          "deleteButton": "Delete"
        },
        "incidentForm": {
          "toast": {
            "nameRequiredWarningTitle": "Attention",
            "nameRequiredWarningDetail": "Incident name is required",
            "successTitle": "Success",
            "successDetail": "Incident created successfully",
            "errorTitle": "Error",
            "errorDetail": "Could not create incident"
          },
          "nameLabel": "Name:",
          "namePlaceholder": "Incident name",
          "descriptionLabel": "Description:",
          "descriptionPlaceholder": "Incident description",
          "saveButton": "Save",
          "cancelButton": "Cancel"
        },
        "inventoryPage": {
          "loadError": "Error loading inventory data",
          "mapInitError": "Map initialization error",
          "elementUpdateError": "Error updating elements",
          "createOutsideZoneError": "Cannot create an element outside the zone"
        },
        "saveElementForm": {
          "fetchElementTypeError": "Error checking if tree type is required:",
          "savePointError": "Failed to save point - no ID returned",
          "infoTitle": "Adding element in the zone",
          "elementTypeLabel": "Element Type",
          "elementTypePlaceholder": "Select an element type",
          "noTypesAvailable": "No types available",
          "noResultsFound": "No results found",
          "elementTypeRequiredError": "This field is required",
          "treeTypeLabel": "Tree Type",
          "treeTypePlaceholder": "Select tree type",
          "treeTypeRequiredError": "This field is required for the selected element type",
          "descriptionLabel": "Description (optional)",
          "descriptionPlaceholder": "Additional element description (optional)",
          "cancelButton": "Cancel",
          "saveButton": "Save Element"
        },
        "saveZoneForm": {
          "validation": {
            "nameRequired": "Name is required",
            "colorFormat": "Must be a valid color code in #RRGGBB format",
            "contractIdRequired": "Contract ID is required",
            "coordinatesRequired": "Coordinates are required"
          },
          "overlapCheckError": "Error analyzing polygon intersection:",
          "toast": {
            "overlapErrorTitle": "Error",
            "overlapErrorDetail": "Cannot create a zone on top of an existing zone",
            "zoneIdError": "Could not get the ID of the created zone.",
            "saveSuccessTitle": "Success",
            "saveSuccessDetail": "Zone and points saved successfully",
            "saveErrorTitle": "Error",
            "saveErrorDetail": "Could not save the zone"
          },
          "infoText": "A zone with {{count}} boundary points will be created. The zone must have a unique name.",
          "nameLabel": "Zone Name",
          "namePlaceholder": "e.g., Central Park",
          "descriptionLabel": "Description",
          "descriptionPlaceholder": "Detailed description of the zone (optional)",
          "colorLabel": "Color",
          "cancelButton": "Cancel",
          "saveButton": "Save Zone"
        },
        "zones": {
          "toast": {
            "loadError": "Error loading resources",
            "loadTypesError": "Error loading element types",
            "eventSystemError": "Error in the event system",
            "deleteSuccess": "Zone and points deleted successfully",
            "deleteError": "Could not delete the zone",
            "showElementsWarningZoneHidden": "Cannot show elements while the zone is hidden.",
            "colorUpdateSuccess": "Color updated successfully",
            "colorUpdateError": "Could not update the color",
            "inlineEditSuccess": "Zone information updated successfully",
            "inlineEditError": "Could not update zone information"
          },
          "title": "Zones",
          "saveZoneButton": "Save Zone",
          "creatingElementInfo": "Creating new element",
          "cancelCreationTooltip": "Cancel creation",
          "searchPlaceholder": "Search zones...",
          "emptyState": {
            "title": "No zones found",
            "messageWithSearch": "Try another search or adjust your filters.",
            "messageDefault": "Create or draw a zone to get started.",
            "clearSearchButton": "Clear search"
          },
          "tooltips": {
            "changeColor": "Change color",
            "showZone": "Show zone",
            "hideZone": "Hide zone",
            "goToZone": "Go to zone",
            "addElement": "Add element",
            "deleteZone": "Delete zone",
            "zoneHidden": "Zone is hidden",
            "showElements": "Show elements",
            "hideElements": "Hide elements"
          },
          "noDescription": "No description",
          "noElementsInZone": "No elements in this zone",
          "addElementButton": "Add element",
          "elementsHeader": "Elements ({{count}})",
          "deleteConfirm": {
            "title": "Confirm deletion",
            "deleteButton": "Delete",
            "warningIrreversible": "This action cannot be undone",
            "confirmationText": "Are you sure you want to delete the zone {{zoneName}}?",
            "infoText": "This action will delete the zone and all its associated points and elements."
          }
        },
        "loadError": "Error loading contract data",
        "createOutsideZoneErrorTitle": "Warning",
        "createOutsideZoneErrorDetail": "Cannot create an element outside the selected zone or area",
        "clickToAddElementPrompt": "Click on the map to add an element",
        "drawingModeActive": "Click save zone to finish drawing",
        "saveZoneDialogTitle": "Save Zone",
        "saveElementDialogTitle": "Save Element",
        "addIncidentDialogTitle": "Add Incident",
        "elementDetailsDialogTitle": "Element Details #{{elementId}}",
        "selectedZoneInfo": "Zone: {{zoneName}}",
        "addingElementInZoneInfo": "Adding in: {{zoneName}}",
        "genericErrorTitle": "Error",
        "genericSuccessTitle": "Success",
        "genericWarningTitle": "Warning"
      },
      "resources": {
        "title": "Resources",
        "form": {
          "fields": {
            "description": "Description",
            "name": "Name",
            "type": "Type"
          },
          "placeholders": {
            "description": "Enter description",
            "name": "Enter name",
            "type": "Select a type"
          },
          "returnButton": "Return to resource list",
          "submitButton": {
            "create": "Create Resource",
            "edit": "Save Changes"
          },
          "submittingText": {
            "create": "Creating...",
            "edit": "Saving..."
          },
          "title": {
            "create": "Create Resource",
            "edit": "Edit Resource"
          },
          "validation": {
            "description_max": "Description cannot exceed 255 characters",
            "name_format": "Name can only contain letters, numbers and spaces",
            "name_max": "Name cannot exceed 50 characters",
            "name_min": "Name must be at least 3 characters",
            "name_required": "Name is required",
            "type_invalid": "Please select a valid resource type",
            "type_required": "Type is required",
            "unit_cost_min": "Unit cost must be greater than 0",
            "unit_cost_required": "Unit cost is required",
            "unit_name_required": "Unit name is required"
          }
        },
        "list": {
          "actions": {
            "delete": "Delete resource",
            "edit": "Edit resource",
            "label": "Actions",
            "create": "Create Resource"
          },
          "columns": {
            "description": "Description",
            "name": "Name",
            "type": "Type",
            "unit": "Unit",
            "unit_name": "Unit Name",
            "unit_cost": "Unit Cost"
          },
          "messages": {
            "createSuccess": "Resource created successfully",
            "deleteConfirm": "Are you sure you want to delete this resource?",
            "deleteSuccess": "Resource deleted successfully",
            "error": "Error saving resource",
            "updateSuccess": "Resource updated successfully"
          }
        }
      },

      "resourceTypes": {
        "title": "Resource Types",
        "form": {
          "placeholders": {
            "description": "Enter description",
            "name": "Enter name"
          },
          "returnButton": "Return to resource type list",
          "submitButton": {
            "create": "Create Resource Type",
            "edit": "Save Changes"
          },
          "submittingText": {
            "create": "Creating...",
            "edit": "Saving..."
          },
          "title": {
            "create": "Create Resource Type",
            "edit": "Edit Resource Type"
          },
          "validation": {
            "description_required": "Description is required",
            "name_invalid": "Name can only contain letters, numbers, and spaces",
            "name_required": "Name is required"
          }
        },
        "list": {
          "actions": {
            "delete": "Delete resource type",
            "edit": "Edit resource type",
            "label": "Actions",
            "create": "Create Resource Type"
          },
          "columns": {
            "description": "Description",
            "name": "Name"
          },
          "messages": {
            "createSuccess": "Resource type created successfully",
            "deleteConfirm": "Are you sure you want to delete this resource type?",
            "deleteSuccess": "Resource type deleted successfully",
            "error": "Error saving the resource type",
            "updateSuccess": "Resource type updated successfully"
          }
        }
      },

      "stats": {
        "title": "Statistics",
        "week": "This Week",
        "month": "This Month",
        "custom": "Custom",
        "startDate": "Start Date",
        "endDate": "End Date",
        "tasksDone": "Tasks Done",
        "tasksNotDone": "Pending Tasks",
        "hoursWorked": "Hours Worked",
        "fuelConsumption": "Fuel Consumption",
        "noData": "No data to display",
        "exportCSV": "Export to CSV",
        "total": "Total",
        "noDataResourcePeriod": "No data available for the selected resource type and period",
        "selectResource": "Select a resource type",
        "selectResourcePlaceholder": "Search your resource type here...",
        "noResourcesAvailable": "No resources available",
        "selectResourcePrompt": "Please select a resource to view its usage"
      },

      "taskTypes": {
        "title": "Task Types",
        "form": {
          "fields": {
            "description": "Description",
            "name": "Name"
          },
          "placeholders": {
            "description": "Enter description",
            "name": "Enter name"
          },
          "returnButton": "Return to task type list",
          "submitButton": {
            "create": "Create Task Type",
            "edit": "Save changes"
          },
          "submittingText": {
            "create": "Creating...",
            "edit": "Saving..."
          },
          "title": {
            "create": "Create Task Type",
            "edit": "Edit Task Type"
          },
          "validation": {
            "error_numbers": "Name cannot contain numbers or special characters",
            "name_required": "Name is required"
          }
        },
        "list": {
          "actions": {
            "delete": "Delete task type",
            "edit": "Edit task type",
            "label": "Actions",
            "create": "Create Task Type"
          },
          "columns": {
            "description": "Description",
            "name": "Task Type"
          },
          "messages": {
            "createSuccess": "Task type created successfully",
            "deleteConfirm": "Are you sure you want to delete this task type?",
            "deleteSuccess": "Task type deleted successfully",
            "error": "Error saving task type",
            "updateSuccess": "Task type updated successfully"
          }
        }
      },

      "treeTypes": {
        "title": "Tree Types",
        "form": {
          "submitButton": {
            "create": "Create Tree Type",
            "edit": "Save Changes"
          },
          "submittingText": {
            "create": "Creating...",
            "edit": "Saving..."
          },
          "title": {
            "create": "Create Tree Type",
            "edit": "Edit Tree Type"
          },
          "validation": {
            "alphanumeric": {
              "family": "Family must contain only alphanumeric characters",
              "genus": "Genus must contain only alphanumeric characters",
              "species": "Species must contain only alphanumeric characters"
            },
            "family": "Family is required",
            "genus": "Genus is required",
            "species": "Species is required"
          }
        },
        "list": {
          "actions": {
            "delete": "Delete Tree Type",
            "edit": "Edit Tree Type",
            "label": "Actions",
            "create": "Create Tree Type"
          },
          "columns": {
            "family": "Family",
            "genus": "Genus",
            "species": "Species"
          },
          "messages": {
            "createSuccess": "Tree type created successfully",
            "deleteConfirm": "Are you sure you want to delete this tree type?",
            "deletedSuccess": "Tree type deleted successfully",
            "error": "Error saving tree type",
            "updateSuccess": "Tree type updated successfully"
          }
        }
      },

      "users": {
        "title": "Users",
        "form": {
          "placeholders": {
            "password": "Password",
            "passwordEdit": "Password (leave blank to keep unchanged)",
            "role": "Select a role"
          },
          "returnButton": "Return to user list",
          "submitButton": {
            "create": "Create User",
            "edit": "Save Changes"
          },
          "submittingText": {
            "create": "Creating...",
            "edit": "Saving..."
          },
          "title": {
            "create": "Create User",
            "edit": "Edit User"
          },
          "validation": {
            "email_required": "Email is required",
            "invalid_email": "Invalid email address",
            "name_required": "Name is required",
            "password_min": "Must be at least 8 characters",
            "password_number": "Must contain at least one number",
            "password_required": "Password is required",
            "password_special": "Must contain at least one special character",
            "password_uppercase": "Must contain at least one uppercase letter",
            "role_invalid": "Invalid role",
            "surname_required": "Surname is required"
          }
        },
        "list": {
          "actions": {
            "delete": "Delete User",
            "edit": "Edit User",
            "label": "Actions",
            "create": "Create User"
          },
          "columns": {
            "company": "Company",
            "dni": "ID card",
            "email": "Email",
            "name": "Name",
            "role": "Role",
            "surname": "Surname"
          },
          "messages": {
            "createSuccess": "User created successfully",
            "deleteConfirm": "Are you sure you want to delete this user?",
            "deleteSuccess": "User deleted successfully",
            "error": "Error saving user",
            "updateSuccess": "User updated successfully"
          }
        }
      },

      "workOrders": {
        "title": "Work Orders",
        "details": {
          "block": "Block",
          "noBlocks": "No blocks",
          "noBlocksAvailable": "No blocks available for this work order",
          "noNotes": "N/A",
          "noTasks": "No tasks assigned",
          "notes": "Notes",
          "noUsers": "No users assigned",
          "noZones": "No zones assigned",
          "tasks": "Tasks",
          "unknown": "Unknown",
          "zones": "Zones"
        },
        "form": {
          "blocksTitle": "Work Blocks",
          "buttons": {
            "addBlock": "Add Block",
            "addTask": "Add Task"
          },
          "fields": {
            "block": "Block",
            "date": "Date",
            "elementType": "Element Type",
            "notes": "Notes",
            "task": "Task",
            "taskType": "Task Type",
            "treeType": "Tree Species",
            "users": "Workers",
            "zones": "Zones"
          },
          "noContract": {
            "message": "You must select a contract in the top panel to create a work order.",
            "title": "No contract selected"
          },
          "placeholders": {
            "elementType": "Select element type",
            "notes": "Add notes for this work block...",
            "status": "Select a status",
            "taskType": "Select task type",
            "treeType": "Select tree species",
            "users": "Select workers",
            "zones": "Select zones for this block"
          },
          "removeBlock": "Remove block",
          "removeTask": "Remove task",
          "returnButton": "Return to work order list",
          "submitButton": {
            "create": "Create Work Order",
            "edit": "Save Changes"
          },
          "submittingText": {
            "create": "Creating...",
            "edit": "Saving..."
          },
          "title": {
            "create": "Create Work Order",
            "edit": "Edit Work Order"
          },
          "validation": {
            "blocks_required": "At least one block is required",
            "date_required": "Date is required",
            "element_type_required": "Element type is required",
            "task_type_required": "Task type is required",
            "tasks_required": "At least one task is required",
            "users_required": "At least one worker must be selected",
            "zones_required": "At least one zone must be selected"
          }
        },
        "list": {
          "actions": {
            "delete": "Delete work order",
            "edit": "Edit work order",
            "label": "Actions",
            "viewReport": "View report",
            "create": "Create Work Order"
          },
          "columns": {
            "contract": "Contract",
            "date": "Date",
            "id": "ID",
            "reportStatus": "Report Status",
            "status": "Status",
            "users": "Workers"
          },
          "messages": {
            "createSuccess": "Work order created successfully",
            "deleteConfirm": "Are you sure you want to delete this work order?",
            "deleteSuccess": "Work order deleted successfully",
            "error": "Error saving work order",
            "noData": "No work orders available",
            "updateSuccess": "Work order updated successfully"
          }
        },
        "reportStatus": {
          "closedWithIncidents": "Closed with Incidents",
          "completed": "Completed",
          "pending": "Pending",
          "rejected": "Rejected",
          "unknown": "Unknown",
          "noReports": "No Reports"
        },
        "status": {
          "completed": "Completed",
          "inProgress": "In Progress",
          "notStarted": "Not Started",
          "reportSent": "Report Sent",
          "unknown": "Unknown"
        }
      },

      "workReport": {
        "title": "Work Report",
        "not_found": "Work report not found",
        "columns": {
          "users": "Workers",
          "observation": "Observation",
          "spent_fuel": "Spent Fuel",
          "incidents": "Incidents",
          "zones": "Zones",
          "tasks": "Tasks",
          "notes": "Notes",
          "block": "Block",
          "resources": "Resources"
        },
        "messages": {
          "closing_part": "Closing work report...",
          "part_closed": "Part successfully closed",
          "closing_block": "Closing block...",
          "close_block": "Block successfully closed",
          "closing_with_incidents": "Closing work report with incidents...",
          "close_with_incidents": "Block closed with incidents",
          "rejecting": "Rejecting work report...",
          "reject": "Block rejected",
          "closing_with_observations": "Closing report with observations...",
          "close_with_observations": "Report closed with observations",
          "error_updating_status": "Error updating work report status",
          "error_updating_observations": "Error updating observations",
          "observation_updated": "Observation updated successfully",
          "error_updating_observation": "Error updating observation",
          "already_processed": "This work report has already been processed",
          "observations_required": "Observations are required when closing with incidents"
        },
        "reportStatus": {
          "pending": "Pending",
          "completed": "Completed",
          "rejected": "Rejected",
          "closedWithIncidents": "Closed with Incidents",
          "unknown": "Unknown"
        },
        "taskStatus": {
          "pending": "Pending",
          "inProgress": "In Progress",
          "completed": "Completed",
          "unknown": "Unknown"
        },
        "details": {
          "details": "Details",
          "block": "Block",
          "noBlocks": "No blocks",
          "noBlocksAvailable": "No blocks available for this work report",
          "tasks": "Tasks",
          "hours": "Hours",
          "spentFuel": "Spent Fuel",
          "liters": "liters",
          "noUsers": "No users assigned",
          "noTasks": "No tasks available",
          "noZones": "No zones assigned",
          "notes": "Notes",
          "noNotes": "No notes available",
          "noResources": "No resources used",
          "noIncidents": "No incidents recorded",
          "unknown": "Unknown",
          "zones": "Zones",
          "resources": "Resources",
          "observation": "Observation",
          "noObservation": "No observation available",
          "incidents": "Incidents"
        },
        "dialogs": {
          "observationHeader": "Add Observations",
          "observationMessage": "Please provide observations for this work report",
          "observationPlaceholder": "Enter your observations here...",
          "editObservationHeader": "Edit Observation",
          "editObservationMessage": "Modify the observation for this report",
          "editObservationPlaceholder": "Enter your updated observation here..."
        }
      },

      "work_reports": {
        "title": "Work Report",
        "not_found": "Work Report not found",
        "details": "Details",
        "columns": {
          "observation": "Observation",
          "spent_fuel": "Spent Fuel",
          "incidents": "Incidents",
          "zones": "Zones",
          "tasks": "Tasks",
          "notes": "Notes",
          "block": "Block"
        },
        "messages": {
          "closing_part": "Closing part...",
          "part_closed": "Part successfully closed",
          "closing_block": "Closing block...",
          "close_block": "Block successfully closed",
          "closing_with_incidents": "Closing block with incidents...",
          "close_with_incidents": "Block closed with incidents",
          "rejecting": "Rejecting block...",
          "reject": "Block rejected"
        }
      },

      "workers": {
        "title": "Workers Management",
        "assignRemoveWorkers": "Assign/Remove Workers",
        "selectWorkers": "Select Workers",
        "selected": "Selected",
        "workersForContract": "Workers for the selected contract",
        "noWorkersAssigned": "No workers assigned to this contract",
        "useDropdownToAssign": "Use the dropdown above to assign workers",
        "selectWorkerHelp": "Select or unselect workers to assign them to this contract",
        "noWorkersFound": "No workers found",
        "name": "Name",
        "email": "Email",
        "company": "Company",
        "dni": "ID Card",
        "pleaseSelectContract": "Please select a contract first",
        "updatedSuccessfully": "Workers updated successfully",
        "failedToLoad": "Failed to load workers",
        "failedToUpdate": "Failed to update workers"
      },

      "sensors": {
        "title": {
          "title": "Sensors",
          "create": "Create Sensor",
          "edit": "Edit Sensor",
          "delete": "Delete Sensor",
          "show": "Show Sensor"
        },
        "loading": "Loading sensor data...",
        "backButton": "Back",
        "notFound": "Sensor not found",
        "loadError": "Error loading sensor data.",
        "identification": "Identification",
        "status": "Status",
        "soilMeasurements": "Soil Measurements",
        "fields": {
          "id": "ID",
          "dev_eui": "DevEUI",
          "device_name": "Device Name",
          "bat": "Battery",
          "battery": "Battery",
          "rssi": "RSSI",
          "snr": "SNR",
          "last_seen": "Last Connection",
          "temp_soil": "Soil Temperature",
          "ph1_soil": "Soil pH",
          "water_soil": "Soil Moisture",
          "conductor_soil": "Soil Conductivity",
          "eui": "DevEUI",
          "name": "Device Name",
          "longitude": "Longitude",
          "latitude": "Latitude"
        },
        "form": {
          "title": {
            "create": "Create Sensor",
            "edit": "Edit Sensor",
            "delete": "Delete Sensor"
          },
          "validation": {
            "eui_required": "EUI is required",
            "eui_min": "EUI must be at least 8 characters",
            "eui_max": "EUI must be less than 32 characters",
            "eui_format": "EUI must be in hexadecimal format (0-9, a-f)",
            "name_required": "Name is required",
            "name_min": "Name must be at least 3 characters",
            "name_max": "Name must be less than 50 characters",
            "name_format": "Name can only contain letters, numbers, spaces, hyphens, and underscores",
            "longitude_required": "Longitude is required",
            "longitude_format": "Invalid longitude (must be between -180 and 180)",
            "latitude_required": "Latitude is required",
            "latitude_format": "Invalid latitude (must be between -90 and 90)"
          },
          "submitButton": {
            "create": "Create Sensor",
            "edit": "Update Sensor"
          },
          "submittingText": {
            "create": "Creating...",
            "edit": "Updating..."
          }
        },
        "list": {
          "messages": {
            "createSuccess": "Sensor created successfully",
            "updateSuccess": "Sensor updated successfully",
            "euiTaken": "EUI is already in use",
            "error": "Error saving the sensor",
            "deleteConfirm": "Are you sure you want to delete this sensor?",
            "deleteError": "Error deleting the sensor",
            "deletedSuccess": "Sensor deleted successfully"
          },
          "actions": {
            "create": "Create Sensor",
            "edit": "Edit Sensor",
            "delete": "Delete Sensor"
          },
          "sensorDefaultName": "Sensor {{id}}",
          "devEUI": "DevEUI",
          "lastUpdate": "Last Update",
          "notAvailable": "Not Available",
          "battery": "Battery",
          "signal": "Signal",
          "temperature": "Temperature",
          "moisture": "Moisture",
          "conductor": "Conductivity",
          "ph": "pH",
          "snr": "SNR",
          "viewHistory": "View History",
          "noSensors": "No sensors found",
          "noValueUnit": "-- {{unit}}"
        },
        "history": {
          "title": "Sensor History",
          "back": "Back to Sensors",
          "noData": "No history data available for this sensor",
          "noDataForMonth": "No data available for this month",
          "view": "View Mode",
          "tableView": "Table View",
          "chartView": "Chart View",
          "backToTable": "Return to Table View",
          "of": "of",
          "metrics": {
            "time": "Time",
            "temp_soil": "Soil Temperature",
            "ph1_soil": "Soil pH",
            "water_soil": "Soil Moisture",
            "conductor_soil": "Soil Conductivity",
            "bat": "Battery",
            "rssi": "Signal Strength (RSSI)",
            "snr": "Signal-to-Noise Ratio"
          },
          "loadError": "Error loading the sensor history."
        }
      }
    },
    "tour": {
      "startTourButton": "Tour",
      "previousButton": "Previous",
      "nextButton": "Next",
      "menuDashboard": {
        "title": "Management",
        "text": "Panel where you can manage the information of the selected contract."
      },
      "menuInventory": {
        "title": "Inventory",
        "text": "View and manage the resources available in the inventory with the help of a map."
      },
      "menuSettings": {
        "title": "Settings",
        "text": "Access the general application settings to create and manage contracts more easily."
      },
      "contractDropdown": {
        "title": "Contract Selector",
        "text": "Select a contract to filter the data displayed in the application."
      },
      "languageSelector": {
        "title": "Language Selector",
        "text": "Change the application language according to your preferences."
      },
      "avatar": {
        "title": "User Avatar",
        "text": "Click on your avatar to access your account options."
      },
      "submenuElementTypes": {
        "title": "Submenu: Element Types",
        "text": "Manage the available element types."
      },
      "submenuTreeTypes": {
        "title": "Submenu: Species",
        "text": "Manage the available tree species."
      },
      "submenuTaskTypes": {
        "title": "Submenu: Task Types",
        "text": "Manage the configurable task types."
      },
      "submenuResourceTypes": {
        "title": "Submenu: Resource Types",
        "text": "Manage the available resource types."
      },
      "submenuUsers": {
        "title": "Submenu: Users",
        "text": "Manage the users registered on the platform."
      },
      "submenuEva": {
        "title": "Submenu: EVA",
        "text": "View and analyze the EVA data of each tree in a list format."
      },
      "submenuWorkOrders": {
        "title": "Submenu: Work Orders",
        "text": "Place where the day's work orders will be created."
      },
      "submenuWorkers": {
        "title": "Submenu: Workers",
        "text": "Place where we assign users to the contract we want them to work on."
      },
      "submenuResources": {
        "title": "Submenu: Resources",
        "text": "Manage the resources available in the contract."
      },
      "submenuStats": {
        "title": "Submenu: Statistics",
        "text": "View statistics and charts."
      },
      "submenuSensors": {
        "title": "Submenu: Sensors",
        "text": "View the activity logs of the sensors."
      },
      "mapScaleControl": {
        "title": "Map Scale Control",
        "text": "This control shows the map scale."
      },
      "mapFullscreenControl": {
        "title": "Map Fullscreen Control",
        "text": "Click here to toggle fullscreen mode."
      },
      "mapGeolocateControl": {
        "title": "Map Geolocation Control",
        "text": "Click here to center the map on your current location."
      },
      "mapAddPointsButton": {
        "title": "Map Add Points Button",
        "text": "Click this button to start adding points for a new zone."
      },
      "mapCancelCreationButton": {
        "title": "Map Cancel Creation Button",
        "text": "Click this button to cancel the creation of points for the zone."
      },
      "finishButton": "Finish",
      "scaleControl": {
        "title": "Scale Control",
        "text": "This control shows the map scale."
      },
      "fullscreenControl": {
        "title": "Fullscreen Control",
        "text": "Click here to toggle fullscreen mode."
      },
      "geolocateControl": {
        "title": "Geolocation Control",
        "text": "Click here to center the map on your current location."
      },
      "addPointsButton": {
        "title": "Add Points for Zones",
        "text": "Click this button to start adding points for a new zone."
      },
      "cancelCreationButton": {
        "title": "Cancel Creation",
        "text": "Click this button to cancel the creation of points for the zone."
      },
      "customButton1": {
        "title": "Custom Button 1",
        "text": "This is custom button number 1."
      },
      "customButton2": {
        "title": "Custom Button 2",
        "text": "This is custom button number 2."
      },
      "customButton3": {
        "title": "Custom Button 3",
        "text": "This is custom button number 3."
      },
      "customButton4": {
        "title": "Custom Button 4",
        "text": "This is custom button number 4."
      },
      "addElementButton": {
        "title": "Button: Add Element",
        "text": "Click this button to add a new element."
      }
    }
  },

  "sensors": {
    "identification": "Identification",
    "monitoring": {
      "title": "Sensor Monitoring",
      "loading": "Loading sensors...",
      "loadError": "Error loading sensor data",
      "noSensors": "No sensors found",
      "lastUpdateLabel": "Last update:",
      "locationTitle": "Location",
      "latestReadingTitle": "LATEST READING",
      "history": {
        "show": "View History ({{count}})",
        "hide": "Hide History",
        "title": "Previous Readings"
      },
      "labels": {
        "dev_eui": "DevEUI",
        "dev_addr": "DevAddr",
        "latitude": "Latitude",
        "longitude": "Longitude",
        "battery": "Battery",
        "signal": "Signal",
        "temp_soil": "Temperature",
        "ph_soil": "pH",
        "water_soil": "Moisture",
        "conductivity_soil": "Conductivity",
        "readingTime": "Time"
      },
      "signalFormat": "RSSI: {{rssi}} dBm | SNR: {{snr}}",
      "units": {
        "voltage": "V",
        "celsius": "°C",
        "percent": "%",
        "microsiemens_per_cm": "µS/cm",
        "dbm": "dBm"
      },
      "soilDataTitle": "Soil Data"
    }
  },

  "worker": {
    "workOrders": {
      "title": "Work Orders",
      "selectDate": "Select Date",
      "noWorkOrders": "No Work Orders",
      "noWorkOrdersMessage": "No work orders assigned for the selected date. Try choosing a different date or contact your supervisor if you believe there should be work assigned.",
      "block": "Block",
      "zones": "Zones",
      "noZones": "No zones assigned",
      "tasks": "Tasks",
      "notes": "Notes",
      "addResources": "Add Resources",
      "saveResources": "Save Resources",
      "resourceTypePlaceholder": "Select a resource type...",
      "resourceTypeLabel": "Resource Type",
      "resourcePlaceholder": "Select a resource...",
      "availableResources": "Available Resources",
      "selectedResources": "Selected Resources",
      "noResourcesSelected": "No resources selected yet",
      "noResourcesInType": "No resources available for this type",
      "selectResourcesHelp": "First select a resource type, then choose specific resources to add",
      "totalResources": "Total resources",
      "unitCost": "Unit Cost",
      "removeResource": "Remove Resource",
      "createReport": "Create Report",
      "viewDetails": "View Details",
      "reportAlreadySent": "Report Already Sent",
      "noContract": "No contract selected. Please select a contract to view work orders.",
      "taskStatus": {
        "pending": "Pending",
        "inProgress": "In Progress",
        "completed": "Completed"
      },
      "startTask": "Start Task",
      "completeTask": "Complete Task",
      "reopenTask": "Reopen Task",
      "timeSpent": "Time Spent",
      "status": {
        "notStarted": "Not Started",
        "inProgress": "In Progress",
        "completed": "Completed",
        "reportSent": "Report Sent",
        "unknown": "Unknown"
      },
      "timeSpentDialog": "Time Spent",
      "enterTimeSpent": "Enter the time spent on this task:",
      "complete": "Complete",
      "start": "Start",
      "reopen": "Reopen",
      "errors": {
        "taskUpdateFailed": "Failed to update the task status",
        "resourcesFetchFailed": "Failed to fetch available resources",
        "resourcesSaveFailed": "Failed to save resources",
        "workOrderCompleted": "Cannot modify a completed work order",
        "fetchFailed": "Failed to fetch work orders"
      },
      "messages": {
        "resourcesAdded": "Resources added successfully",
        "taskUpdated": "Task updated successfully",
        "reportCreated": "Work report created successfully",
        "noResourcesSelected": "Please select at least one resource",
        "reportCreationFailed": "Failed to create work report"
      },
      "createWorkReport": "Create Work Report",
      "spentFuel": "Spent Fuel (Liters)",
      "resourceType": "Resource Type",
      "resources": "Resources",
      "addResource": "Add Resource",
      "resource": "Resource {0}",
      "resourceName": "Resource Name",
      "unit": "Unit",
      "quantity": "Quantity",
      "selectResourceTypeFirst": "Please select a resource type first",
      "noResourcesForType": "No resources available for this type",
      "noResourceTypes": "No resource types available",
      "observations": "Observations",
      "observationsPlaceholder": "Enter any observations or incidents here",
      "submitReport": "Submit Report",
      "taskUpdated": "Task updated successfully"
    },
    "workReports": {
      "title": "Work Reports",
      "create": "Create Work Report"
    }
  }
}
