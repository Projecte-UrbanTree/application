name: Deploy to Production

on:
  push:
    branches:
      - main
    paths-ignore:
      - ".devcontainer/**"
      - ".docker/**"
      - ".github/**"
      - ".vscode/**"
      - "tests/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install sshpass (for password authentication)
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to server (via password authentication)
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
        run: |
          sshpass -p "$SSH_PASSWORD" rsync -avz --delete \
            --exclude=".devcontainer" --exclude=".docker" --exclude=".github" --exclude=".vscode" --exclude="tests" \
            --exclude=".env" --exclude="database/database.sqlite" \
            --no-perms --no-group --chmod=ugo=rwX \
            -e 'ssh -p 21222 -o StrictHostKeyChecking=no' ./ $SSH_USER@$SSH_HOST:$REMOTE_PATH

      - name: Execute setup commands on server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -p 21222 -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'EOF'
            set -e

            echo "Setting permissions..."
            echo "$SSH_PASSWORD" | sudo -S chown -R frontendweb:www-data /var/www/urbantree
            echo "$SSH_PASSWORD" | sudo -S chmod -R u+rwX,g+rwX,o+rX /var/www/urbantree
            echo "$SSH_PASSWORD" | sudo -S chmod -R 775 /var/www/urbantree/storage /var/www/urbantree/bootstrap/cache
            echo "$SSH_PASSWORD" | sudo -S chown -R www-data:www-data /var/www/urbantree/storage /var/www/urbantree/bootstrap/cache

            echo "Installing dependencies..."
            cd /var/www/urbantree
            echo "$SSH_PASSWORD" | sudo -S composer install --no-dev --optimize-autoloader
            echo "$SSH_PASSWORD" | sudo -S npm install
            echo "$SSH_PASSWORD" | sudo -S npm run build

            echo "Running migrations..."
            echo "$SSH_PASSWORD" | sudo -S php artisan migrate --seed --force

            echo "Clearing and caching..."
            echo "$SSH_PASSWORD" | sudo -S php artisan optimize:clear
            echo "$SSH_PASSWORD" | sudo -S php artisan config:cache
            echo "$SSH_PASSWORD" | sudo -S php artisan route:cache

            echo "Restarting services..."
            echo "$SSH_PASSWORD" | sudo -S systemctl restart nginx
            echo "$SSH_PASSWORD" | sudo -S systemctl restart php8.3-fpm

            echo "Deployment finished!"
          EOF
