name: Deploy to Production

on:
  push:
    branches:
      - main
    paths-ignore:
      - ".devcontainer/**"
      - ".docker/**"
      - ".github/**"
      - ".vscode/**"
      - "tests/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Deploy to server (via password authentication)
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
        run: |
          sshpass -p "$SSH_PASSWORD" rsync -avz --delete \
            --exclude={".devcontainer",".docker",".github",".vscode","tests",".env","database/database.sqlite","bootstrap/cache","vendor","node_modules"} \
            --chown=frontendweb:www-data \
            -e 'ssh -p 21222 -o StrictHostKeyChecking=no' ./ $SSH_USER@$SSH_HOST:$REMOTE_PATH

      - name: Execute setup commands on server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -p 21222 -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << 'EOF'
            set -e
            
            echo "ðŸ’¡ Setting permissions..."
            sudo chown -R frontendweb:www-data /var/www/urbantree
            sudo chmod -R 775 /var/www/urbantree
            sudo chown -R frontendweb:www-data /var/www/urbantree/storage /var/www/urbantree/bootstrap/cache
            sudo chmod -R 770 /var/www/urbantree/storage /var/www/urbantree/bootstrap/cache
            
            echo "ðŸ“¦ Installing dependencies..."
            cd /var/www/urbantree
            sudo -u frontendweb composer install --no-dev --optimize-autoloader
            sudo -u frontendweb npm ci --legacy-peer-deps
            sudo -u frontendweb npm run build


            echo "ðŸ”„ Running migrations..."
            sudo -u frontendweb php artisan migrate --step --force

            echo "ðŸ§¹ Clearing and caching..."
            php artisan optimize:clear
            php artisan config:cache
            php artisan route:cache

            echo "ðŸ”„ Restarting services..."
            sudo systemctl restart nginx
            sudo systemctl restart php8.3-fpm

            echo "ðŸš€ Deployment finished!"
          EOF
